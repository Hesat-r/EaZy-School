<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>